package market;

import java.awt.Color;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.ApplicationFrame;

public class Graphics extends ApplicationFrame {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	//
	// parámetros
	//
	XYDataset dataset; 	// conjunto de datos
	JFreeChart chart; 	// gráfico
	
	//
	// constructor con el título de la pantalla 
	//
	public Graphics(final String title) {
        super(title);
    }
	
	//
	// constructor para una gráfica tipo StepChart
	//
	public Graphics(final String title, XYDataset dataset, JFreeChart chart, String typePlot) {
        super(title);
        if(typePlot == "step") stepChartTheme(chart);
        else if(typePlot == "line") lineChartTheme(chart); 
        final ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new java.awt.Dimension(500, 270));
        setContentPane(chartPanel);
    }
	
	//
	// constructor para una gráfica tipo LinepChart
	//
	/*public Graphics(final String title, XYDataset dataset, JFreeChart chart) {
        super(title);
        lineChartTheme(chart);
        final ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new java.awt.Dimension(500, 270));
        setContentPane(chartPanel);
    }*/
	
	// set methods
	public void setDataset(XYDataset dataset){this.dataset =  dataset; }
	public void setChar(JFreeChart chart){this.chart =  chart; }
	
	//
	// Formato de un gráfico tipo StepChart
	//
	private void stepChartTheme(JFreeChart chart) {
        chart.setBackgroundPaint(Color.white); 		// chart background        
        final XYPlot plot = chart.getXYPlot(); 		// se obtiene una referencia a la gráfica para futuras modificaciones
        plot.setBackgroundPaint(Color.white);		// background del área del gráfico
        plot.setDomainGridlinePaint(Color.black); 	// color cuadricula eje x
        plot.setRangeGridlinePaint(Color.black);	// color cuadricula eje y

        // change the auto tick unit selection to integer units only...
        final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());	       
	}
	
	//
	// Formato de un gráfico tipo LineChart
	//
	private void lineChartTheme(JFreeChart chart) {
        chart.setBackgroundPaint(Color.white); // chart background        
        final XYPlot plot = chart.getXYPlot(); // Se obtiene una referencia a la gráfica para futuras modificaciones
        plot.setBackgroundPaint(Color.white);
        plot.setDomainGridlinePaint(Color.black);
        plot.setRangeGridlinePaint(Color.black);
        
        // permite cambiar la presentación de las lineas que representan las series de tiempo
        final XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
        //renderer.setSeriesLinesVisible(0, false);
        renderer.setSeriesShapesVisible(0, true);
        plot.setRenderer(renderer);

        // change the auto tick unit selection to integer units only...
        final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());	       
	}
}
